; ==================================================================================================================== ;

;project build

; ==================================================================================================================== ;

[release-build]
command:c,cpp = cmake . -GNinja -DCMAKE_BUILD_TYPE=Release -Bbuild/release && cd build/release && ninja
command:vlang = iverilog -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" "$(VIM_FILEDIR)/header.v" "$(VIM_FILEPATH)" "$(VIM_FILEDIR)/$(VIM_FILENOEXT)_tb.v"

cwd = $(VIM_ROOT)

output = terminal

[debug-build]
command:c,cpp = cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug -Bbuild/test && cd build/test && ninja

cwd=$(VIM_ROOT)

output = terminal

; ==================================================================================================================== ;

;project run

; ==================================================================================================================== ;

[release-run]
command:c,cpp = [ "$(ls data/)" ] && bin/main < data/*.* || bin/main
command:vlang = vvp $(VIM_FILEPATH)

cwd = $(VIM_ROOT)

output = terminal

[debug-run]

command:vlang = open -a gtkwave "$(VIM_PATHNOEXT).vcd"

cwd = $(VIM_ROOT)

output = terminal

; ==================================================================================================================== ;

;project publish

; ==================================================================================================================== ;

[github-push]
command = git add . && git commit -m "commit" && git push

cwd = $(VIM_ROOT)

output = terminal

[npm-publish]
command = echo "npm publish"

cwd = $(VIM_ROOT)

output = terminal

[firebase-deploy]
command = echo "firebase deploy"

cwd = $(VIM_ROOT)

output = terminal

; ==================================================================================================================== ;
